{"version":3,"sources":["images/jumbotronCrop.png","pages/Create.js","pages/Home.js","pages/View.js","pages/Edit.js","pages/Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Create","props","state","boardName","boardDescription","participants","handleNameChange","bind","handleDescriptionChange","handleSubmit","addParticipant","event","this","setState","target","value","preventDefault","axios","method","url","data","then","response","window","location","origin","ops","id","catch","error","console","log","finally","allParticipants","push","index","name","score","splice","onSubmit","type","required","onChange","map","item","handleParticipantNameChange","handleParticipantScoreChange","title","onClick","deleteParticipant","button","whileHover","scale","whileTap","React","Component","Home","useState","panel1Visible","setpanel1Visible","panel2Visible","setpanel2Visible","panel3Visible","setpanel3Visible","handleScroll","currentScrollPos","pageYOffset","useEffect","addEventListener","removeEventListener","className","div","animate","translateX","opacity","transition","ease","duration","h2","translateY","delay","alt","src","logo","View","board","setBoard","hasLoaded","setHasLoaded","useParams","fetch","res","a","json","result","length","sort","b","reverse","description","href","require","Edit","setBoardName","setBoardDescription","setParticipants","e","_id","key","Board","App","to","exact","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2d72235b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jumbotronCrop.44d7198d.png\";","import React from 'react';\r\nimport '../App.css';\r\nimport { motion } from 'framer-motion';\r\nimport axios from 'axios';\r\n\r\nclass Create extends React.Component {\r\n    //CONSTRUCTOR\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {boardName: '', boardDescription: '', participants: []};\r\n    \r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addParticipant = this.addParticipant.bind(this);\r\n    }\r\n    \r\n    //FUNCTIONS\r\n    handleNameChange(event) {\r\n        this.setState({boardName: event.target.value});\r\n    }\r\n    handleDescriptionChange(event) {\r\n        this.setState({boardDescription: event.target.value});\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8000/api/create',    //DEVELOPMENT\r\n            //url: window.location.origin+'/api/create',  //PRODUCTION\r\n            data: {\r\n              boardName: this.state['boardName'],\r\n              boardDescription: this.state['boardDescription'],\r\n              participants: this.state['participants']\r\n            }\r\n          })\r\n        .then(function (response) {\r\n            window.location = window.location.origin+'/view/'+response.data.ops[0].id\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n            \r\n        })\r\n        .finally()\r\n    }\r\n    addParticipant() {\r\n        let allParticipants = this.state.participants;\r\n        allParticipants.push({'name':'', 'score': 0});\r\n        this.setState({participants: allParticipants});\r\n    }\r\n    handleParticipantNameChange (index, event) {\r\n        let allParticipants = this.state.participants;\r\n        allParticipants[index].name = event.target.value;\r\n        this.setState({participants: [...allParticipants]});\r\n    }\r\n    handleParticipantScoreChange (index, event) {\r\n        let allParticipants = this.state.participants;\r\n        allParticipants[index].score = event.target.value;\r\n        this.setState({participants: [...allParticipants]});\r\n    }\r\n    deleteParticipant (index) {\r\n        let allParticipants = this.state.participants;\r\n        allParticipants.splice(index,1);\r\n        this.setState({participants: [...allParticipants]});\r\n    }\r\n\r\n    //RENDERER\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2>Create New Board</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Name:\r\n                        <input type=\"text\" required value={this.state.boardName} onChange={this.handleNameChange} />\r\n                    </label>\r\n                    <label>\r\n                        Description:\r\n                        <input type=\"text\" required value={this.state.boardDescription} onChange={this.handleDescriptionChange} />\r\n                    </label>\r\n                    {\r\n                        this.state.participants.map(\r\n                            (item, index) => ( \r\n                                <>\r\n                                    <label>\r\n                                        Participant Name:\r\n                                        <input type=\"text\" required value={item.name} onChange={this.handleParticipantNameChange.bind(this, index)} />\r\n                                    </label>\r\n                                    <label>\r\n                                        Participant Starting Score:\r\n                                        <input type=\"number\" required value={item.score} onChange={this.handleParticipantScoreChange.bind(this, index)} />\r\n                                    </label>\r\n                                    <button type=\"button\" title=\"Delete participant\" onClick={this.deleteParticipant.bind(this, index)}>x</button>\r\n                                </>\r\n                            )\r\n                        )\r\n                    }\r\n                    <button type=\"button\" onClick={this.addParticipant}>Add Participant</button>\r\n                    <motion.button whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }} type=\"submit\" value=\"Submit\">Submit </motion.button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Create;\r\n","import React, {useState, useEffect} from 'react';\r\nimport '../App.css';\r\nimport logo from '../images/jumbotronCrop.png';\r\nimport { motion } from \"framer-motion\"\r\n\r\nfunction Home() {\r\n  const [panel1Visible, setpanel1Visible] = useState(false);\r\n  const [panel2Visible, setpanel2Visible] = useState(false);\r\n  const [panel3Visible, setpanel3Visible] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    const currentScrollPos = window.pageYOffset;\r\n    setpanel1Visible(panel1Visible ? true : currentScrollPos > 80);\r\n    setpanel2Visible(panel2Visible ? true : currentScrollPos > 390);\r\n    setpanel3Visible(panel3Visible ? true : currentScrollPos > 700);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n\r\n  }, [handleScroll]);\r\n\r\n  const handleClick = () => {\r\n    window.location = '/create'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"homeBanner\">\r\n      <motion.div animate={{ translateX: [-150, 0], opacity: [0, 1] }} transition={{ ease: \"easeOut\", duration: 2 }} className=\"homeBannerLeft\">\r\n        <h1>LeadTheBoard</h1>\r\n        <motion.h2 animate={{ translateY: [75, 0], opacity: [0, 1] }} transition={{ ease: \"easeOut\", delay: 2, duration: 1 }}>\r\n          LeadTheBoard is a free, online leaderboard creation tool that allows you to easily setup, edit, and share leaderboards.\r\n        </motion.h2>\r\n        <motion.button animate={{ translateY: [75, 0], opacity: [0, 1] }} transition={{ ease: \"easeOut\", delay: 2.5, duration: 1 }} type=\"button\" className=\"primaryButton\" onClick={handleClick}>\r\n          GET STARTED\r\n        </motion.button>\r\n      </motion.div>\r\n      <motion.div animate={{ translateX: [150, 0], opacity: [0, 1] }} transition={{ ease: \"easeOut\", duration: 2 }} className=\"homeBannerRight\">\r\n        <img alt=\"Woman in front of leaderboard\" src={logo} />\r\n      </motion.div>\r\n    </div>\r\n    <div className=\"panel\">\r\n      <div className={panel1Visible ? 'panelContent easeInLeft' : 'panelContent'}>\r\n        <h3>\r\n          Create\r\n        </h3>\r\n        <p>\r\n          Create a free leaderboard in seconds.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div className=\"panelInverse\">\r\n      <div className={panel2Visible ? 'panelContent easeInRight' : 'panelContent'}>\r\n        <h3>\r\n          Edit\r\n        </h3>\r\n        <p>\r\n          Edit your leaderboard at any time.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div className=\"panel\">\r\n      <div className={panel3Visible ? 'panelContent easeInLeft' : 'panelContent'}>\r\n        <h3>\r\n          Share\r\n        </h3>\r\n        <p>\r\n          Share your leaderboard with anybody.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {useParams} from 'react-router-dom';\r\n//const axios = require('axios');\r\n\r\nfunction View() {\r\n    const [board, setBoard] = useState({});\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/api/view/'+id) //DEVELOPMENT\r\n        //fetch(window.location.origin+'/api/view/'+id) //PRODUCTION\r\n        .then(async res => {\r\n            //console.log(res);\r\n            return await res.json()\r\n        })\r\n        .then(result => { \r\n            console.log(result);\r\n            if(result.length > 0){\r\n                result[0].participants.sort(function(a, b){\r\n                    return a.score-b.score\r\n                }).reverse()\r\n                setBoard(result[0]);\r\n                setHasLoaded(true);\r\n            }\r\n            \r\n        });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{board.title}</h1>\r\n            <h2>{board.description}</h2>\r\n            <a href={window.location.origin+'/edit/'+board.id}>Edit</a>\r\n            <button type=\"button\">Share</button>\r\n            { !hasLoaded ? 'Loading' :\r\n                board.participants.map(\r\n                    (item, index) => ( \r\n                        <div>{index + 1}<strong>{item.name}</strong>{item.score}</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default View;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {useParams} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nconst axios = require('axios');\r\n\r\nfunction Edit() {\r\n    const [board, setBoard] = useState({});\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n    const [boardName, setBoardName] = useState('');\r\n    const [boardDescription, setBoardDescription] = useState('');\r\n    const [participants, setParticipants] = useState([]);\r\n    let { id } = useParams();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8000/api/edit/'+id, //DEVELOPMENT\r\n            //url: window.location.origin+'/api/edit/'+id  //PRODUCTION\r\n            data: {\r\n              boardName: boardName,\r\n              boardDescription: boardDescription,\r\n              participants: participants,\r\n              id: board._id\r\n            }\r\n          })\r\n        .then(function (response) {\r\n            console.log(response);\r\n            window.location = window.location.origin+'/view/'+id\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n            \r\n        })\r\n        .finally()\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/api/view/'+id) //DEVELOPMENT\r\n        //fetch(window.location.origin+'/api/view/'+id) //PRODUCTION\r\n        .then(async res => {\r\n            //console.log(res);\r\n            return await res.json()\r\n        })\r\n        .then(result => { \r\n            console.log(result);\r\n            if(result){\r\n                result[0].participants.sort(function(a, b){\r\n                    return a.score-b.score\r\n                }).reverse()\r\n                setBoard(result[0]);\r\n                let board = result[0];\r\n                setBoardName(board.title);\r\n                setBoardDescription(board.description);\r\n                setParticipants(board.participants);\r\n                setHasLoaded(true);\r\n            }\r\n            \r\n        });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            { !hasLoaded ? 'Loading' :\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <label>\r\n                    Name:\r\n                    <input type=\"text\" required value={boardName} onChange={e => setBoardName(e.target.value)} />\r\n                </label>\r\n                <label>\r\n                    Description:\r\n                    <input type=\"text\" required value={boardDescription} onChange={e => setBoardDescription(e.target.value)} />\r\n                </label>\r\n                {participants.map((item, index) => (\r\n                    <>\r\n                    <label>\r\n                        Participant Name:\r\n                        <input key={index} value={item.name}  onChange={e => { participants[index].name = e.target.value; setParticipants([...participants]); }} />\r\n                    </label>\r\n                    <label>\r\n                        Participant Score:\r\n                        <input key={index} value={item.score}  onChange={e => { participants[index].score = e.target.value; setParticipants([...participants]); }} />\r\n                    </label>\r\n                    <button type=\"button\" title=\"Delete participant\" onClick={e => { participants.splice(index, 1); setParticipants([...participants]); }}>x</button>\r\n                    </>\r\n                ))}\r\n                <button type=\"button\" onClick={e => { participants.push({name:'', score:0}); setParticipants([...participants]); }}>Add Participant</button>\r\n                <motion.button whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }} type=\"submit\" value=\"Submit\">Submit </motion.button>\r\n            </form>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {useParams} from 'react-router-dom';\r\n//const axios = require('axios');\r\n\r\nfunction Board() {\r\n    const [board, setBoard] = useState({});\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/api/board/'+id) //DEVELOPMENT\r\n        //fetch(window.location.origin+'/api/view/'+id) //PRODUCTION\r\n        .then(async res => {\r\n            //console.log(res);\r\n            return await res.json()\r\n        })\r\n        .then(result => { \r\n            console.log(result);\r\n            if(result.length > 0){\r\n                result[0].participants.sort(function(a, b){\r\n                    return a.score-b.score\r\n                }).reverse()\r\n                setBoard(result[0]);\r\n                setHasLoaded(true);\r\n            }\r\n            \r\n        });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>{board.title}</h1>\r\n            <h2>{board.description}</h2>\r\n            { !hasLoaded ? 'Loading' :\r\n                board.participants.map(\r\n                    (item, index) => ( \r\n                        <div>{index + 1}<strong>{item.name}</strong>{item.score}</div>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Create from './pages/Create'\nimport Home from './pages/Home'\nimport View from './pages/View'\nimport Edit from './pages/Edit'\nimport Board from './pages/Board'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <header>\n          <nav>\n            <span>\n              <p>LeadTheBoard</p>\n            </span>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/create\">Create</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <Switch>\n        <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/view/:id\" children={<View />} />\n          <Route path=\"/edit/:id\" children={<Edit />} />\n          <Route path=\"/board/:id\" children={<Board />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}